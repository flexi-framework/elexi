!=================================================================================================================================
! Copyright (c) 2010-2024  Prof. Claus-Dieter Munz 
! This file is part of FLEXI, a high-order accurate framework for numerically solving PDEs with discontinuous Galerkin methods.
! For more information see https://www.flexi-project.org and https://nrg.iag.uni-stuttgart.de/
!
! FLEXI is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License 
! as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
!
! FLEXI is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty
! of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License v3.0 for more details.
!
! You should have received a copy of the GNU General Public License along with FLEXI. If not, see <http://www.gnu.org/licenses/>.
!=================================================================================================================================
!
!   This a parameter file for Flexi (https://flexi-project.org)
!    
!   Usage: mpirun -np XX ./flexi thisparameterfile.ini or
!          ./flexi thisparameterfile.ini
!
!   Structure: Keyword = Value
!              Not case sensitive, order of keywords not important
!           
!   ./flexi --help for a list of available settings
!

!==============================================================================
! Parameter-file for simple test of Sponge functionality:
! Shu-Vortex is convected into Sponge-zone and forced to constant base flow.
!==============================================================================

!=========================================================================================
! Interpolation
!=========================================================================================
N                     =              3 ! Polynomial degree of computation to represent to  
                                       ! solution  
                                        
!=========================================================================================
! Output
!=========================================================================================
ProjectName           = SpongeShuVortex ! Name of the current simulation (mandatory).  
OutputFormat          =              0 ! File format for visualization. <=0: no  
                                       ! visualization, 1: Tecplot binary, 2: Tecplot  
                                       ! ASCII, 3: Paraview binary. Note: Tecplot output is  
                                       ! currently unavailable due to licensing issues.  
doPrintStatusLine     =              T ! Print: percentage of time, ...  
!=========================================================================================
! Mesh
!=========================================================================================
MeshFile              = mesh/ShuVortex_mesh.h5 ! (relative) path to meshfile (mandatory).  
useCurveds            =              F ! Controls usage of high-order information in mesh.  
                                       ! Turn off to discard high-order data and treat  
                                       ! curved meshes as linear meshes.  
!=========================================================================================
! Equation of State
!=========================================================================================
mu0                   =            0.0 ! Dynamic Viscosity  
!=========================================================================================
! Equation
!=========================================================================================
IniExactFunc          =              7 ! Exact function to be used for computing initial  
                                       ! solution.  
IniRefState           =              1 ! Refstate required for initialization.  
RefState              = (/1.,1.,0.,0.,7.94/) ! State(s) in primitive variables (density, velx,  
                                             ! vely, velz, pressure).  
!=========================================================================================
! Exactfunc
!=========================================================================================
IniCenter             = (/0.,0.,0./)         ! Shu Vortex CASE(7) (x,y,z)
IniAxis               = (/0.,0.,1./)         ! Shu Vortex CASE(7) (x,y,z)
IniAmplitude          =           0.200      ! Shu Vortex CASE(7)
IniHalfwidth          =           0.200      ! Shu Vortex CASE(7)
!=========================================================================================
! Riemann
!=========================================================================================
Riemann               =             33 ! Riemann solver to be used. 1: Lax-Friedrichs, 2:  
                                       ! HLLC, 3: Roe, 33: Roe with entropy fix, 4: HLL, 5:  
                                       ! HLLE, 6: HLLEM  
!=========================================================================================
! Sponge
!=========================================================================================
SpongeLayer           =              T ! Turn on to employ sponge regions for reducing  
                                       ! reflections at boundaries.  
SpongeDistance        =             3. ! Length of sponge ramp. The sponge will have  
                                       ! maximum strength at the end of the ramp and after  
                                       ! that point.  
damping               =           1.00 ! Damping factor of sponge (0..1).  
SpongeShape           =              1 ! Set shape of sponge: 1: cartesian /  
                                       ! vector-aligned, 2: cylindrical  
xStart                =   (/1.,0.,0./) ! Coordinates of start postion of sponge ramp  
                                       ! (shape=1) or center (shape=2).  
SpongeViz             =              T ! Turn on to write a visualization file of the  
                                       ! sponge region and strength.  
SpongeDir             =   (/1.,0.,0./) ! Direction vector of the sponge ramp  
                                       ! (SpongeShape=1)  
SpongeBaseFlow        =              1 ! Type of baseflow to be used for sponge. 1: fixed  
                                       ! state, 2: exact function, 3: read baseflow file,  
                                       ! 4: temporally varying, solution adaptive Pruett  
                                       ! baseflow  
SpongeRefState        =              1 ! Index of refstate in ini-file (SpongeBaseFlow=1)  
!=========================================================================================
! TimeDisc
!=========================================================================================
TimeDiscMethod        = CarpenterRK4-5 ! Specifies the type of time-discretization to be  
                                       ! used,  
                                       ! e.g. the name of a specific Runge-Kutta scheme.  
                                       ! Possible values:  
                                       !   * standardrk3-3  
                                       !   * carpenterrk4-5  
                                       !   * niegemannrk4-14  
                                       !   * toulorgerk4-8c  
                                       !   * toulorgerk3-7c  
                                       !   * toulorgerk4-8f  
                                       !   * ketchesonrk4-20  
                                       !   * ketchesonrk4-18  
TEnd                  =             6. ! End time of the simulation (mandatory).  
CFLScale              =            0.9 ! Scaling factor for the theoretical CFL number,  
                                       ! typical range 0.1..1.0 (mandatory)  
DFLScale              =            0.9 ! Scaling factor for the theoretical DFL number,  
                                       ! typical range 0.1..1.0 (mandatory)  
!=========================================================================================
! Analyze
!=========================================================================================
Analyze_dt            =            0.1 ! Specifies time intervall at which analysis  
                                       ! routines are called.  
NAnalyze              =              6 ! Polynomial degree at which analysis is performed  
                                       ! (e.g. for L2 errors). Default: 2*N.  
